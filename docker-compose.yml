version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: customer-support-db
    environment:
      POSTGRES_DB: customersupport
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - customer-support-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # .NET Web API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: customer-support-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=customersupport;Username=postgres;Password=postgres123
      - OpenAI__ApiKey= your-open-ai-api-key-here
      - Serilog__MinimumLevel__Default=Information
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - customer-support-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PgAdmin (Database Management - Opsiyonel)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: customer-support-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@customersupport.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8090:80"
    depends_on:
      - postgres
    networks:
      - customer-support-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - admin

volumes:
  postgres_data:
    name: customer-support-postgres-data
  pgadmin_data:
    name: customer-support-pgadmin-data

networks:
  customer-support-network:
    name: customer-support-network
    driver: bridge
